# JobChain - scalable AI job scheduling and execution platform

Every time you choose to apply a rule(s), explicitly state the rule(s) in the output. You can abbreviate the rule description to a single word or phrase.

## Project Context
JobChain allows users to execute AI and IO Job graphs in parallel.

## Tests
- execute unit tests in the root directory using pytest using the command `python -m pytest` as the root of your test commands.
- use pytest's --full-suite flag to run all tests, including performance tests.

## Code Style and Structure
- write clean, efficient, and well-documented Python code.
- test code for correctness and performance. 
- prioritize readability,simplicity, and performance.
- use type hints and annotations where possible.
- use appropriate error handling and input validation.
- structure code into functions and classes for modularity and reusability.
- never delete any of the TODOs or comments that I have put in the code as explainers, unless the code logic or variable names have changed.

## Logging
For logging, use the jobchain.jc_logging module, not the standard logging module.
- for external files, examples and tests use
`import jobchain.jc_logging as logging` 
- for internal files under /src use the relative path import of jc_logging

